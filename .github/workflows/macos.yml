# .github/workflows/macos.yml
name: Q3Rally macOS Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Manuell auslÃ¶sbar
    inputs:
      build_type:
        description: 'Build Type'
        required: true
        default: 'release'
        type: choice
        options:
        - release
        - debug

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]  # Intel und Apple Silicon
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        brew install sdl2
    
    - name: Build macOS Release
      run: |
        cd engine
        BUILD_TYPE="${{ github.event.inputs.build_type || 'release' }}"
        make $BUILD_TYPE PLATFORM=darwin ARCH=${{ matrix.arch }}
    
    - name: Verify build
      run: |
        cd engine
        echo "=== Build artifacts ==="
        find build/ -name "*.dylib" -o -name "q3rally*" -o -name "ioq3ded*" | head -10
        
        echo "=== Executable files ==="
        find build/ -perm +111 -type f | head -5
    
    - name: Package macOS Build
      run: |
        BUILD_TYPE="${{ github.event.inputs.build_type || 'release' }}"
        mkdir -p releases/macos-${{ matrix.arch }}
        cd engine
        cp -r build/$BUILD_TYPE-darwin-${{ matrix.arch }}/* ../releases/macos-${{ matrix.arch }}/
        
        # Create info file
        cd ../releases/macos-${{ matrix.arch }}
        echo "Q3Rally macOS Build" > BUILD_INFO.txt
        echo "Architecture: ${{ matrix.arch }}" >> BUILD_INFO.txt
        echo "Build Type: $BUILD_TYPE" >> BUILD_INFO.txt
        echo "Build Date: $(date)" >> BUILD_INFO.txt
        echo "Commit: ${{ github.sha }}" >> BUILD_INFO.txt
    
    - name: Upload macOS Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: q3rally-macos-${{ matrix.arch }}
        path: releases/macos-${{ matrix.arch }}
        retention-days: 30

  # Optional: Create combined release package
  package-universal:
    needs: build-macos
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Intel build
      uses: actions/download-artifact@v4
      with:
        name: q3rally-macos-x86_64
        path: intel-build
    
    - name: Download ARM build  
      uses: actions/download-artifact@v4
      with:
        name: q3rally-macos-arm64
        path: arm-build
    
    - name: Create Universal Package
      run: |
        mkdir -p universal-build
        
        # Copy ARM build as base
        cp -r arm-build/* universal-build/
        
        # Create universal binaries where possible
        for binary in universal-build/*; do
          if [ -f "$binary" ] && [ -x "$binary" ]; then
            intel_binary="intel-build/$(basename "$binary")"
            if [ -f "$intel_binary" ]; then
              echo "Creating universal binary for $(basename "$binary")"
              lipo -create "$binary" "$intel_binary" -output "$binary.universal" 2>/dev/null || cp "$binary" "$binary.universal"
              mv "$binary.universal" "$binary"
            fi
          fi
        done
        
        # Add build info
        echo "Universal macOS Build (Intel + Apple Silicon)" > universal-build/UNIVERSAL_BUILD.txt
        echo "Build Date: $(date)" >> universal-build/UNIVERSAL_BUILD.txt
    
    - name: Upload Universal Build
      uses: actions/upload-artifact@v4
      with:
        name: q3rally-macos-universal
        path: universal-build
